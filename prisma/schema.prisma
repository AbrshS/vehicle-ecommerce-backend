// generator dbml {
//   provider   = "prisma-dbml-generator"
//   output     = "../dbml"
//   outputName = "awesome.dbml"
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  firstName        String
  lastName         String
  phone            String?
  email            String    @unique
  password         String
  verificationCode String?
  lastLoggedIn     DateTime?
  token            String?
  role             String
  avatarPath       String?   @unique
  status           String    @default("ACTIVE")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @default(now())
  Order            Order[]
  Payment          Payment[]
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String?
  products    Product[] @relation("CategoryToProduct")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  quantity    Int
  category    Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  categoryId  String
  imageUrl    String?  @unique
  orders      Order[]  @relation("ProductToOrder")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Order {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  products    Product[] @relation("ProductToOrder")
  quantity    Int[]
  totalAmount Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  payment     Payment[]
}

model Payment {
  id         String   @id @default(uuid())
  tx_ref     String
  bill_url   String
  customer   User     @relation(fields: [customerId], references: [id])
  customerId String
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
  status     String   @default("ACTIVE")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
